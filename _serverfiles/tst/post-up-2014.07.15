#!/bin/bash

# Debug mode (set to true or false)
DEBUG=false

# Get the current release: solydx, solydk, solydkbe or solydkbo
RELEASE=$(cat /etc/solydxk/info | grep EDITION= | cut -d'=' -f2)

BITS=$(uname -m)
echo -e "$(date +%Y/%m/%d\ %H:%M:%S)\tPost-UpScript\tDEBUG\tRelease: $RELEASE $BITS"

# Function to install a given package
# Parameters:
# 1. package name
# 2. action: install, reinstall, purge, remove, forceremove, forceinstall
# 3. distribution: all, solydx32, solydx64, solydk32, solydk64, solydkbo, solydkbe
function handle_pck {
    PCK=$1
    ACTION=$2
    DISTRO=$3
    CONTINUE=true
    
    if [ "$DISTRO" != "all" ] && [ "$DISTRO" != "$RELEASE" ]; then
        echo -e "$(date +%Y/%m/%d\ %H:%M:%S)\tPost-UpScript\tDEBUG\tdo not $ACTION $PCK on $RELEASE ($DISTRO only)"
        CONTINUE=false
    fi

    if $CONTINUE; then
	PCKINST=$(dpkg-query -l $PCK | grep ^i)
	if [ "${PCKINST:0:1}" != "i" ]; then
	    if [ "$ACTION" != "install" ] && [ "$ACTION" != "forceinstall" ]; then
		echo -e "$(date +%Y/%m/%d\ %H:%M:%S)\tPost-UpScript\tDEBUG\t$ACTION not needed, $PCK not installed"
		CONTINUE=false
	    fi
	    PCKINST=$PCK
	else
	    if [ "$ACTION" == "install" ]; then
		echo -e "$(date +%Y/%m/%d\ %H:%M:%S)\tPost-UpScript\tDEBUG\t$ACTION not needed, $PCK already installed"
		CONTINUE=false
	    fi
	fi
	
	if $CONTINUE; then
	    if [ "$ACTION" == "forceremove" ]; then
		echo -e "$(date +%Y/%m/%d\ %H:%M:%S)\tPost-UpScript\tDEBUG\tdpkg --force-remove-reinstreq -P $PCK"
		if ! $DEBUG; then
		    dpkg --force-remove-reinstreq -P $PCK
		fi
	    else
		if [ "$ACTION" == "reinstall" ]; then
		    ACTION="install --reinstall"
		elif [ "$ACTION" == "forceinstall" ]; then
		    ACTION="install --reinstall -o Dpkg::Options::='--force-overwrite'"
		fi
		
		echo -e "$(date +%Y/%m/%d\ %H:%M:%S)\tPost-UpScript\tDEBUG\tapt-get $ACTION $PCK"
		if ! $DEBUG; then
		    apt-get $ACTION -y --force-yes $PCK
		fi
	    fi
	fi
    fi
}

# Function to handle a given configuration file
# Parameters:
# 1. full path to configuration file
# 2. option name (before "=")
# 3. optional: option value (after "=")
# 4. optional: string to add option and value after (on a new line)
# When (3) is left empty, (2) will be simply appended to the configuration file
function handle_cnf {
    CNF=$1
    OPT=$2
    VAL=''
    if [ ! -z $3 ]; then
        VAL=$3
    fi
    APPAFTER=''
    if [ ! -z $4 ]; then
        APPAFTER=$4
    fi
    
    LINE=$OPT
    if [ "$VAL" != "" ]; then
        LINE="$OPT=$VAL"
    fi
    
    ESCOPT=${OPT//\[/\\[}
    ESCOPT=${ESCOPT//\]/\\]}
    ESCOPT=${ESCOPT//\//\\/}
        
    if [ -e $CNF ]; then
	if grep -Fq $OPT $CNF; then
	    if [ "$OPT" != "$LINE" ]; then
		echo -e "$(date +%Y/%m/%d\ %H:%M:%S)\tPost-UpScript\tDEBUG\t$CNF : replace $OPT with $LINE"
		if ! $DEBUG; then
		    sed -i "s/$ESCOPT/$LINE/" $CNF
		fi
	    fi
	else
	    if [ "$APPAFTER" == "" ]; then
	        echo -e "$(date +%Y/%m/%d\ %H:%M:%S)\tPost-UpScript\tDEBUG\tAppend $LINE to $CNF"
	        if ! $DEBUG; then
		    echo >> $CNF
		    echo -e "$LINE" >> $CNF
		fi
	    else
	        echo -e "$(date +%Y/%m/%d\ %H:%M:%S)\tPost-UpScript\tDEBUG\tAppend $LINE after $APPAFTER in $CNF"
	        if ! $DEBUG; then
	            sed -i "\'/\$APPAFTER/a \$LINE\'" $CNF
	        fi
	    fi
	fi
    fi
}

# Function to prevent a package from updating
function hold_pck {
  if [ ! -z $1 ]; then
    echo "$1 hold" | dpkg --set-selections
  fi
}

# Function to remove the hold on a package
function unhold_pck {
  if [ ! -z $1 ]; then
    echo "$1 install" | dpkg --set-selections
  fi
}

# ==============================================================
# Leave these as-is
# ==============================================================
#handle_pck 'nvidia-kernel-dkms' 'reinstall' 'all'
handle_cnf '/usr/share/applications/display.im6.desktop' 'NoDisplay=true'
handle_cnf '/usr/share/applications/debian-uxterm.desktop' 'NoDisplay=true'
handle_cnf '/usr/share/applications/debian-xterm.desktop' 'NoDisplay=true'
# Fix Synaptic in SolydX not starting
if [ -e /usr/share/applications/synaptic.desktop ]; then
  sed -i 's/synaptic-pkexec/gksudo synaptic/' /usr/share/applications/synaptic.desktop
fi
# Remove fake mime types in kde
if [ -e /usr/share/mime/packages/kde.xml ]; then
  sed -i -e /\<.*fake.*\>/,/^$/d /usr/share/mime/packages/kde.xml
fi
# ==============================================================


# Configure the individual packages, and configuration files here
handle_pck 'solydxk-locale' 'install' 'all'
